package com.eric.chat.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.alibaba.fastjson.JSON;
import com.eric.core.util.SystemInfoUtil;
import com.eric.core.util.UniqueIdUtil;


@Controller
@RequestMapping("/chat/")
public class ChatController {

	@RequestMapping("customer")
	public String customChat(HttpServletRequest request,Model model){
	    return "chat/customer";       
	}
	
	@RequestMapping("guest")
	public String guestChat(HttpServletRequest request,Model model){
	    return "chat/guest";       
	}
	@RequestMapping("test")
	public String testChat(HttpServletRequest request,Model model){
		System.out.println(UniqueIdUtil.genId());
		System.out.println(SystemInfoUtil.getJdkInfo());
		System.out.println(SystemInfoUtil.getMemoryInfo());

	    return "chat/test";       
	}
	
	/**
	   * ajax请求不需要返回页面，只需要得到response中的数据即可，所以方法签名为void即可
	   * 
	   * @param request
	   * @param response 
	   */
	  @RequestMapping(value = "getRequest", method = RequestMethod.POST)
	  public void ajaxDatas(HttpServletRequest request, HttpServletResponse response) {
	    String jsonResult = "1";//getJSONString(request);
	    renderData(response, jsonResult);
	  }
	
    private String getJSONString(HttpServletRequest request) {
	    //故意构造一个数组，使返回的数据为json数组，数据更复杂些
		Map<String, Object> map1 = new HashMap<String, Object>(10);
		//可以获得ajax请求中的参数
		map1.put("status", request.getParameter("a"));
	    String jsonResult = JSON.toJSONString(map1);
	    return jsonResult;
    }
	
	  /**
	   * 通过PrintWriter将响应数据写入response，ajax可以接受到这个数据
	  */
	  private void renderData(HttpServletResponse response, String data) {
	    PrintWriter printWriter = null;
	    try {
	      printWriter = response.getWriter();
	      printWriter.print(data);
	    } catch (IOException ex) {

	    } finally {
	      if (null != printWriter) {
	        printWriter.flush();
	        printWriter.close();
	      }
	    }
	  }
}
